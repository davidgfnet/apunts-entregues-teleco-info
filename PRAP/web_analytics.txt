                          Análisis de Sitios Web

Una consultora especializada en Internet nos ha encargado un estudio de
diversos sitios web, con el objetivo de determinar su potencial publicitario.
Durante un cierto periodo de tiempo, recogeremos y analizaremos diversos datos
sobre las visitas recibidas por los mencionados sitios y diseñaremos un
programa que permita extraer información interesante a partir de dichos datos.

Nos centraremos en un conjunto de M sitios web, identificados con los valores
1..M, que no puede variar durante la realización del estudio. Los M sitios
permanecen siempre "on-line" y pueden recibir cualquier cantidad de visitas por
parte de cualquier cantidad de usuarios de la red.

Estructura de un sitio web:

Cada sitio web consta de una página principal y un número cualquiera de páginas
adicionales. Cada página permite acceder como máximo a otras dos páginas nuevas
y diferentes.  Si existen, se denominan respectivamente "siguiente por la
izquierda" y "siguiente por la derecha".

De cara a nuestro estudio, cada página tiene asociados un identificador y una
valoración, medida en puntos. Ambos pueden ser enteros positivos cualesquiera.
De esta forma, cada visita a un sitio produce una puntuación que depende en
buena medida de los puntos de las páginas vistas durante la visita.

Visitas a un sitio web:

Para analizar cada visita realizada a un sitio web, dispondremos de los
movimientos realizados por el visitante (lo que permite saber qué páginas del
sitio ha visitado y en qué orden) y el tiempo que se ha detenido en cada página
antes de moverse hacia otra, medido en segundos. Debido a la estructura de los
sitios, existen tres tipos de movimientos:

- Desde una página a su siguiente por la izquierda, si tiene
- Desde una página a su siguiente por la derecha, si tiene
- Desde una página a su anterior (todas tienen, salvo la página principal)

Llamaremos "camino" a la secuencia de movimientos que un usuario realiza
durante una visita a un sitio web. Llamaremos "subcamino" a cualquier
subconjunto de movimentos consecutivos de un camino. Podemos suponer que en el
momento de analizar un camino ya conoceremos su longitud.

Ejemplo: consideremos el siguiente sitio web, donde para cada página mostramos
un par formado por su identificador y su puntuación.


                              (132, 1)
                           /           \
                       (34, 2)        (14, 3)
                     /        \      /       \
              (987, 10)  (423, 15) (2, 5)   (111, 20)  
                     \                       /
                  (99, 6)                 (3245, 34) 


Un camino *válido* para dicho sitio comienza siempre desde la página principal
y contiene el tiempo de visita a la misma seguido por los movimientos y los
tiempos de permanencia del resto de páginas. No debe contener movimientos que
no se puedan hacer, concretamente, avanzar hacia la izquierda o derecha si no
existen las correspondientes páginas o retroceder a la página anterior desde la
página principal.

Si denotamos un movimiento hacia la izquierda mediante el valor -1, un
movimiento hacia la derecha mediante el valor -2 y un movimiento hacia atrás
mediante el valor -3, la siguiente tira de números

1 -1 3 -2 5 -3  1 -3 1 -2 8 -2 20 -3 1

representa que el visitante ha trazado el siguiente camino

a) ha permanecido 1 segundo en la página principal (id. 132), 
b) se ha movido a la izquierda (34) y ha permanecido en ella 3 segundos,
c) se ha movido a la derecha (423) y ha permanecido en ella 5 segundos,
d) se ha movido a la anterior (34) y ha permanecido en ella 1 segundo,
e) se ha movido a la anterior (132) y ha permanecido en ella 1 segundo,
f) se ha movido a la derecha (14) y ha permanecido en ella 8 segundos,
g) se ha movido a la derecha (111) y ha permanecido en ella 20 segundos,
h) se ha movido a la anterior (14) y ha permanecido en ella 1 segundo

y ha terminado la visita.


Puntuación de una visita:

Cada visita válida a un sitio web genera una puntuación, que se calcula como la
suma de los puntos de cada página visitada multiplicados por su tiempo de
permanencia. Adicionalmente, a los puntos obtenidos mediante dicho cálculo se
les suma un "bonus" de K puntos (cantidad conocida de antemano) si el camino no
contiene redundancia de páginas visitadas. Consideramos que una página es
visitada de forma redundante si desde ella se realiza más de una vez el mismo
movimento.

Ejemplo: con los datos del ejemplo anterior y si K=100, la visita realizada
produce 612 puntos.

1*1 (pág. 132) + 2*3 (pág. 34) + 15*5 (pág. 423) + 2*1 (pág. 34) + 
1*1 (pág. 132) + 3*8 (pág. 14) + 20*20 (pág. 111) + 3*1 (pág. 14) + 100 = 612


Se pide:

Diseñar un programa modular razonablemente eficiente que gestione los
procedimientos arriba descritos.  En particular, no se debe guardar información
duplicada ni realizar cálculos redundantes.

En primer lugar, el programa leerá los datos de los M sitios web.  Después
deberá ejecutar un número no determinado de veces las tareas que se le pidan,
que salvo pequeños ajustes posteriores serán las siguientes:

1) Realizar visita: leerá el identificador del sitio visitado y el camino
recorrido.  Nos dirá si el camino es válido y, en caso afirmativo, los puntos
obtenidos.

2) Mejor sitio: dado un valor positivo n, obtendrá el sitio con mejor cociente
de puntos por visita, de entre los que han recibido un mínimo de n vistas. En
caso de que varios sitios obtengan el mismo cociente, se devolverá el de
identificador más pequeño. Esta operación se aplicará al final del estudio y,
quizá, en algún momento intermedio del mismo, pero en cualquier caso con una
frecuencia mucho menor que la operación 1.

3) Mejor visita: obtendrá el sitio que haya tenido la visita con más puntos y
la secuencia de los identificadores de las páginas visitadas durante la misma,
ordenados cronológicamente. En caso de que varias visitas obtengan la misma
puntuación, se devolverán los datos de la más antigua.  Esta operación se
aplicará al final del estudio y, quizá, en algún momento intermedio del mismo,
pero en cualquier caso con una frecuencia mucho menor que la operación 1.

Podemos suponer que los datos de cada operación serán correctos, es decir, los
identificadores siempre estarán dentro de los intervalos previstos, no
aparecerá un número de sitios distinto de M, no habrá identificadores
repetidos, los caminos serán sintácticamente correctos (aunque no sean
válidos), no se pedirá la operación 2 con un n tal que ningun sitio cumpla la
propiedad pedida, etc.

La forma de comunicarnos con el programa para que realice dichas tareas será
parecida a la de los casos de estudio de teoría: "Cubeta", "Agencia de viajes,
etc.  Podéis diseñar un esquema provisional que ya refinaréis cuando conozcáis
el juego de pruebas público.

En días sucesivos se completarán los detalles que se hayan podido pasar por
alto en este enunciado y se publicarán las aclaraciones oportunas.

La sintaxis *exacta* de los datos y resultados, acompañada del juego de pruebas
público y los valores concretos de M y K, se conocerá dos semanas antes del
día de la entrega del programa C++.  Hasta entonces no podréis implementar de
forma definitiva las operaciones de lectura y escritura necesarias para los
tipos que utilicéis, aunque sí podréis especificarlas.  Podéis consultar el
ejemplo del cuatrimestre anterior para tener una idea aproximada.
