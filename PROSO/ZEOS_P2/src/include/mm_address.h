#ifndef MM_ADDRESS_H
#define MM_ADDRESS_H

#define NR_SEM        10
#define KERNEL_STACK_SIZE	1024
#define NR_FD         10
#define NR_FD_SYSTEM  50

#define ENTRY_DIR_PAGES       0

#define TOTAL_PAGES 1024
#define NUM_PAG_KERNEL 256
#define PAG_LOG_INIT_CODE_P0 (L_USER_START>>12)
#define FRAME_INIT_CODE_P0 (PH_USER_START>>12)
#define NUM_PAG_CODE 8
#define PAG_LOG_INIT_DATA_P0 (PAG_LOG_INIT_CODE_P0+NUM_PAG_CODE)
#define NUM_PAG_DATA 20
#define PAGE_SIZE 0x1000

/* Memory distribution */
/***********************/

#define KERNEL_ESP       (DWord) &task[0].t.stack[KERNEL_STACK_SIZE]

#define KERNEL_START        0x010000
#define L_USER_START        0x100000
#define PH_USER_START       0x100000
#define IO_ADDRESS          0x300000
#define USER_ESP	(L_USER_START+(NUM_PAG_CODE+NUM_PAG_DATA)*0x1000-16)
#define USER_END	(L_USER_START+(NUM_PAG_CODE+NUM_PAG_DATA)*0x1000)

#define AUXILIAR_LOGIC_ZONE  (L_USER_START+(NUM_PAG_CODE+NUM_PAG_DATA)*0x1000)

#define DISK_DATA_START      (L_USER_START+(NUM_PAG_CODE+NUM_PAG_DATA*2+10)*0x1000)

#endif

