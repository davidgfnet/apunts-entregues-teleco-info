# Lines beginning with '#' are comments

[General]
preload-ned-files=*.ned
network="SimPract2"

# Seleccionar el generador pseudo-aleatorio interno de Omnet
# Solo debe haber 1 descomentado ó ninguno (por defecto se elige el cMersenneTwister)

# Creados en LT3
#rng-class="LT3LCG"
#rng-class="LT3Seleccion"

# Propios de Omnet
 rng-class="cMersenneTwister"
# rng-class="cLCG32"
# rng-class="cAkaroaRNG"

[Parameters]
# Variable aleatoria a generar. Solo debe haber uno descomentado!!
# SimPract2.rngGenerator.random_variable = lt3_rng();	# Generador pseudoaleatorio
# SimPract2.rngGenerator.random_variable = lt3_exponencial(8);	# Variable aleatoria exponencial(Ejercicio 4)
#SimPract2.rngGenerator.random_variable = lt3_geometrica(1,15,7);	# Variable aleatoria geometrica (Ejercicio 4)#SimPract2.rngGenerator.random_variable = lt3_normal(0,1,3);	# Variable aleatoria normal (Ejercicio 5)
#SimPract2.rngGenerator.random_variable = lt3_convolucion_exponencial(7, 3);	# Ejercicio 6
SimPract2.rngGenerator.random_variable = lt3_chi2(0, 1, 2);	# Ejercicio 7

#Otros parámetros
SimPract2.rngGenerator.number_of_random_numbers = 100000
SimPract2.rngGenerator.num_of_bars = 100

[LCG 1] #Se pueden crear secciones particulares
#Valores para el generador congruencial por defecto, LCG_A ó LCG_B
multiplier =23445 # a
additive= 7369 # b
module= 19946 # m

[LCG 2]
# Valores para el generador congruencial adicional necesario en el método de la selección, LCG_A ó LCG_B
multiplier = 720908 # a
additive= 8161 # b
module=	65537 # m

[Seleccion]
bufferSize=100 # Tamano del vector (podeis probar con otros valores)

[Run 0] # Semillas para el Run 0
seed-0-mt=1234 #Semilla para el MT
seed-1-lcg = 7247    #Semilla para la sección LCG 1
seed-2-lcg = 23    #Semilla para la sección LCG 2

[Run 1] # Semillas para el Run 1
seed-0-mt=4321 #Semilla para el MT
seed-1-lcg = 15    #Semilla para la sección LCG 1
seed-2-lcg = 51    #Semilla para la sección LCG 2







